{
    "acceptedApiChanges": [
        {
            "type": "org.gradle.api.artifacts.dsl.DependencyHandler",
            "member": "Method org.gradle.api.artifacts.dsl.DependencyHandler.registerTransform(java.lang.Class,org.gradle.api.Action)",
            "acceptation": "Allowing names for ArtifactTransforms",
            "changes": [
                "Abstract method is now default method"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestReport",
            "member": "Method org.gradle.api.tasks.testing.TestReport.getBuildOperationExecutor()",
            "acceptation": "Protected methods intende to be overriden by Gradle, not API",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestReport",
            "member": "Method org.gradle.api.tasks.testing.TestReport.getBuildOperationRunner()",
            "acceptation": "Protected methods intende to be overriden by Gradle, not API",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.api.tasks.testing.TestReport",
            "member": "Method org.gradle.api.tasks.testing.TestReport.getObjectFactory()",
            "acceptation": "Protected methods intende to be overriden by Gradle, not API",
            "changes": [
                "Method is now abstract"
            ]
        },
        {
            "type": "org.gradle.kotlin.dsl.DependencyHandlerScope",
            "member": "Class org.gradle.kotlin.dsl.DependencyHandlerScope",
            "acceptation": "Allowing names for ArtifactTransforms",
            "changes": [
                "org.gradle.kotlin.dsl.support.delegates.DependencyHandlerDelegate.registerTransform(java.lang.Class,org.gradle.api.Action)"
            ]
        }
    ]
}
